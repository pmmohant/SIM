/**
 * Company			: 	LAVANTE
 * Project Name	   	:	Lavante SIM Application
 * Automation		: 	Selenium Automation
 * Author			: 	MadhuMurthy
 */

package com.lavante.sim.customer.TestScripts.CustomerSupplierProfileView;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.Assert;
import org.testng.Reporter;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Optional;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.lavante.sim.Common.Util.*;
import com.lavante.sim.customer.pageobjects.SupplierProfile.CustSupViewProfilePage;
import com.lavante.sim.customer.pageobjects.GenericPage;
import com.lavante.sim.customer.pageobjects.PageInitiator;
import com.lavante.sim.customer.pageobjects.Login.LoginPage;
import com.lavante.sim.Common.Util.*;

public class CustSupViewProfileTC0002 extends PageInitiator{

	List<setTestData> objReqFieldListsTestData = null;
	List<String> rtnExpCusRequiredFieldsText=null;
	List<String> rtnSupRequiredFieldsText=null;
	LavanteUtils lavanteUtils=new LavanteUtils();
	GetExcelFile ge=new GetExcelFile();

	@BeforeClass
	@Parameters({ "Platform", "Browser", "Version" })
	public void navigateToLoginPage(@Optional(LavanteUtils.Platform) String Platform,@Optional(LavanteUtils.browser) String browser,
			@Optional(LavanteUtils.browserVersion) String Version) throws Exception{
		
		launchAppFromPOM(Platform,browser,Version);
		initiate();
		
		openAPP();
		
		objReqFieldListsTestData = ge.getData(ConfigPathFile.TestDataForCustSupViewProfile.getConstantValue(),ConfigPathFile.RequiredFieldLists.getConstantValue());
		
	}

	/**
	 * Method Name : VerifyRequiredFieldLists 
	 * Purpose: which calls the respective method to validate Required Field Lists.
	 * @param: None
	 * @return None
	 */
	@Test(priority=22)
	public void verifyRequiredFieldLists(){
		Reporter.log("CustSupViewProfileTC0002 Started: ");
		try {
			for (int i = 0; i < objReqFieldListsTestData.size(); i++) {
				if (objLoginPage.userLogin(objReqFieldListsTestData.get(i)) == true) {
					if(i==0){
						rtnExpCusRequiredFieldsText=objCustSupViewProfilePage.validateCompletedRequiredFieldLists(objReqFieldListsTestData.get(i).getSupplierName().trim().toString(),"");
						objLoginPage.logout();
						System.out.println("B%");
					}else if(i==1){ System.out.println("!!!");
					System.out.println(objReqFieldListsTestData.get(i).getUserName());
						rtnSupRequiredFieldsText=objCustSupViewProfilePage.validateSuppliersRequiredFieldList(objReqFieldListsTestData.get(i).getSupplierName().trim().toString(),"",objReqFieldListsTestData.get(i).getCustomerName().trim().toString());
						}
				}
			
			}
			for (int k = 0; k < rtnExpCusRequiredFieldsText.size(); k++) {
				System.out.println("Exp:"+rtnExpCusRequiredFieldsText.get(k).toString());
			}
			
			for (int j = 0; j < rtnSupRequiredFieldsText.size(); j++) {
				System.out.println("APP Data:"+rtnSupRequiredFieldsText.get(j).toString());
			}
			for (int k = 0; k < rtnExpCusRequiredFieldsText.size(); k++) {
				for (int j = 0; j < rtnSupRequiredFieldsText.size(); j++) {
					
					
					
					if (rtnSupRequiredFieldsText.get(j).toString().contains(rtnExpCusRequiredFieldsText.get(k).toString())) {
						Reporter.log(" Required Field from customer: | "+ (rtnExpCusRequiredFieldsText.get(k).toString()	+ " | is matched with Required Field from supplier: | " + rtnSupRequiredFieldsText.get(j).toString()+" |"));
						break;
					} else {
						if (j + 1 == rtnSupRequiredFieldsText.size()) {
						//	log.severe("Test is failed due to expected and actual required field text values are mismatched, expected is "+ rtnExpCusRequiredFieldsText.get(k).toString()+ " but actual is "		+ rtnSupRequiredFieldsText.get(j).toString());
							lavanteUtils.takeScreenshot("VerifyRequiredFieldLists");
							Assert.assertTrue(false," Test is failed due to expected and actual  required field text values are mismatched, expected is "+ rtnExpCusRequiredFieldsText.get(k).toString()+ " but actual is "	+ rtnSupRequiredFieldsText.get(j).toString());
						}
					}
				}
			}
			objLoginPage.logout();
		}catch (Exception e) {
		//	log.severe("Exception in method VerifyRequiredFieldLists: "+ e.getMessage());
		//	Assert.assertTrue(false,"Exception in method VerifyRequiredFieldLists: "+ e.getMessage());
		}
		Reporter.log("Execution of Test Case CustSupViewProfileTC0002 is completed: ");
	}

	@AfterClass
	public void close(){
			quitBrowser();
	}

		

}
